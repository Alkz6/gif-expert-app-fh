{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","console","log","trim","category","type","value","onChange","target","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAiB9C,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACFC,QAAQC,IAAI,gBACRN,EAAWO,SACXT,GAAc,SAAAU,GAAQ,OAAKR,GAAL,mBAAoBQ,OAC1CP,EAAc,OAMd,2BACIQ,KAAK,OACLC,MAAOV,EACPW,SAnBc,SAACR,GACvBE,QAAQC,IAAIH,EAAES,OAAOF,OACrBT,EAAcE,EAAES,OAAOF,Y,uBCPlBG,EAAO,uCAAI,WAAOL,GAAP,uBAAAM,EAAA,6DACdC,EADc,iDACmCC,UAAUR,GAD7C,+DAEDS,MAAMF,GAFL,cAEdG,EAFc,gBAGGA,EAAKC,OAHR,uBAGZC,EAHY,EAGZA,KACRf,QAAQC,IAAIc,GACNC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,IACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,iBAAE,EAAYC,wBAAd,aAAE,EAA8BZ,QAG3CV,QAAQC,IAAIe,GAZQ,kBAabA,GAba,4CAAJ,sDCCPO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OADAV,QAAQC,IAAIkB,EAAIC,EAAOV,GAEnB,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFHO,EAAU,SAAC,GAAgB,IAAfxB,EAAc,EAAdA,SAAc,ECFX,SAAEA,GAAe,IAAD,EAEdT,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAmBxC,OAZAC,qBAAU,WACNvB,EAAQL,GAAU6B,MAAK,SAACX,GAEpBS,EAAS,CACLf,KAAMM,EACNO,SAAS,SAKlB,CAACzB,IAEG0B,EDf0BI,CAAa9B,GAAjCkB,EAFsB,EAE3BN,KAAaa,EAFc,EAEdA,QAErB,OACI,oCACI,4BAAKzB,GACHyB,GAAW,yCACb,yBAAKJ,UAAU,aAAf,OACMH,QADN,IACMA,OADN,EACMA,EAAQJ,KAAI,SAAAC,GACV,OAAO,kBAAC,EAAD,eACHgB,IAAKhB,EAAIC,IACLD,UEbfiB,EAAe,WAAM,MAIMzC,mBAAS,CAAC,cAJhB,mBAIvB0C,EAJuB,KAIX3C,EAJW,KAW9B,OACI,oCACC,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEO2C,EAAWnB,KAAI,SAAAd,GAAQ,OACnB,kBAAC,EAAD,CAAS+B,IAAK/B,EAAUA,SAAUA,UCjBtDkC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.29753288.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        console.log(e.target.value);\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log('Submit hecho');\n        if (inputValue.trim()){\n            setCategories(category => [inputValue, ...category]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                type=\"text\" \n                value={inputValue} \n                onChange={handleInputChange} \n            />\n        </form>\n    )\n};\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired,\n}","\nexport const getGifs  = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=WEA9tpkfETg303evxKmZoeDvOS8qIA3m`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    console.log(data)\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium?.url,\n        }\n    });\n    console.log(gifs);\n    return gifs;\n}","import React from 'react';\n\nexport const GifGridItem = ({id, title, url}) => {\n    console.log(id, title, url);\n    return (\n        <div className='card animate__fadeIn animate__delay-2s'>\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}","// import React, { useState, useEffect } from 'react';\nimport React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n    const { data:images, loading } = useFetchGifs(category);\n\n    return (\n        <>\n            <h3>{category}</h3>\n            { loading && <p>Loading...</p>}\n            <div className=\"card-grid\">\n                { images?.map(img => {\n                    return <GifGridItem \n                        key={img.id} \n                        {...img} \n                    />\n                })}\n            </div>\n        </>\n    );\n}","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() =>{\n        getGifs(category).then((images) => {\n            \n            setState({\n                data: images,\n                loading: false\n            });\n            \n\n        });\n    }, [category]);\n\n    return state; //{ data: [], loading: true }\n\n}","import React, { useState } from 'react';\nimport { AddCategory } from './AddCategory';\nimport { GifGrid } from './GifGrid';\n\nexport const GifExpertApp = () => {\n\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\n\n    const [categories, setCategories] = useState(['One Punch']);\n\n    // const handleAdd = () => {\n    //     // setCategories(['HunterXHunter', ...categories]);\n    //     setCategories(category => [...category, 'HunterXHunter']);\n    // }\n\n    return (\n        <>\n         <h1>GifExpertApp</h1>\n         <AddCategory setCategories={setCategories} />\n         <hr />\n         {/* <button onClick={handleAdd}>Agregar</button> */}\n         <ol>\n             {\n                categories.map(category => (\n                    <GifGrid key={category} category={category} />\n                ))\n             }\n\n         </ol>\n        </>\n    )\n}\n\n\n// export default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport {GifExpertApp} from './components/GifExpertApp';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}